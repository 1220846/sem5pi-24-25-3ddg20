@startuml process-view-2
autonumber

actor "Patient" as PatientActor
participant "UsersController" as Controller <<Controller>>
participant "UserService" as Service <<Service>>
participant "UserDto" as UserDto <<Domain>>
participant "AnonymizedPatientData" as AnonymizedPatientData <<Domain>>
participant "IEmailService" as IEmailService <<Domain>>
database "IUserRepository" as UserRepository <<Domain>>
database "IPatientRepository" as PatientRepository <<Domain>>
database "IAnonymizedPatientDataRepository" as AnonymizedPatientDataRepository <<Domain>>

activate PatientActor

    PatientActor-> Controller : POST /api/users/patients/request-delete/{username}

    activate Controller 

        Controller -> Service : RequestDeleteUserPatientAsync(username)

            activate Service
            
                Service -> UserRepository : GetByIdAsync(username)

                activate UserRepository

                    UserRepository --> Service  : user

                deactivate UserRepository

                alt user == null

                    Service --> Controller : NullReferenceException

                    PatientActor <-- Controller : 404 Not Found
                else

                Service -> IEmailService : SendEmailAsync(to,subject,body)

                activate  IEmailService

                    IEmailService --> Service : message

                deactivate IEmailService

                Service --> Controller : message

            deactivate Service

        Controller --> PatientActor : 200 OK

    deactivate Controller

    PatientActor-> Controller : DELETE api/users/patients/confirm-delete/{username}

    activate Controller

        Controller -> Service : DeleteUserPatientAsync(username)

        activate Service

            Service -> UserRepository : GetByIdAsync(username)

            activate UserRepository

                UserRepository --> Service  : user

            deactivate UserRepository

            alt user == null

                Service --> Controller : NullReferenceException

                PatientActor <-- Controller : 404 Not Found

            Service -> PatientRepository : GetByUserIdAsync(username)

            activate PatientRepository

                PatientRepository --> Service : patient

            deactivate PatientRepository

            alt patient == null 

                Service --> Controller : NullReferenceException

                PatientActor <-- Controller : 404 Not Found

            else

                Service  -> Service : CalculateAgeRange(patient.DateOfBirth)

                activate Service

                    Service --> Service : ageRange
                
                deactivate Service

                Service -> AnonymizedPatientData : create(ageRange, patient.Gender, patient.MedicalConditions, patient.AppointmentHistory)

                activate AnonymizedPatientData

                    AnonymizedPatientData --> Service :  anonymizedPatientData

                deactivate AnonymizedPatientData

                Service -> AnonymizedPatientDataRepository : AddAsync(anonymizedPatientData)

                activate  AnonymizedPatientDataRepository

                    AnonymizedPatientDataRepository --> Service: anonymizedPatientData

                deactivate AnonymizedPatientDataRepository

                Service  -> UserRepository : Remove(user)

                Service -> PatientRepository : Remove(patient)

                Note  right of Service: Delete user in the auth0 api

                Service -> UserDto : create(Username,Email,Role)

                activate UserDto

                    UserDto --> Service : userDto

                deactivate UserDto

                Service --> Controller : userDto
            end
            end
            end

        deactivate Service

        PatientActor <-- Controller : 200 OK

    deactivate Controller

deactivate PatientActor


@enduml