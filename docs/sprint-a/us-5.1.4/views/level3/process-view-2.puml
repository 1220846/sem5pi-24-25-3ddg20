@startuml process-view-2
autonumber

actor "Patient" as PatientActor
participant "UsersController" as Controller <<Controller>>
participant "UserService" as Service <<Service>>
participant "User" as User <<Domain>>
participant "Patient" as Patient <<Domain>>
participant "UserDto" as UserDto <<Domain>>
database "IUserRepository" as UserRepository <<Domain>>
database "IPatientRepository" as PatientRepository <<Domain>>

activate PatientActor

    PatientActor-> Controller : PATCH /api/users/patients/{username}

    activate Controller

        Controller -> Service : UpdateUserPatientAsync(username,updateUserPatientDto)

        activate Service

            Service -> UserRepository : GetByIdAsync(username)

            activate UserRepository

                UserRepository --> Service  : user

            deactivate UserRepository

            alt user == null

                Service --> Controller : NullReferenceException

                PatientActor <-- Controller : 404 Not Found

            Service -> PatientRepository : GetByUserIdAsync(username)

            activate PatientRepository

                PatientRepository --> Service : patient

            deactivate PatientRepository

            alt patient == null 

                Service --> Controller : NullReferenceException

                PatientActor <-- Controller : 404 Not Found

            else    

                alt  updatePatientDto.FirstName != null
                    Service -> Patient : ChangeFirstName(updateUserPatientDto.FirstName)
                end

                alt  updatePatientDto.LastName != null
                    Service -> Patient : ChangeLastName(updateUserPatientDto.LastName)
                end

                alt  updatePatientDto.FullName != null
                    Service -> Patient : ChangeFullName(updateUserPatientDto.FullName)
                end

                alt  updatePatientDto.Email != null
                    Service -> User : ChangeEmail(updateUserPatientDto.Email)
                    Service -> Patient : ChangeEmail(updateUserPatientDto.Email)
                end

                alt  updatePatientDto.PhoneNumber != null
                    Service -> Patient : ChangePhoneNumber(updateUserPatientDto.PhoneNumber)
                end

                alt  updatePatientDto.Address != null || updatePatientDto.PostalCode
                    Service -> Patient : ChangeAddress(new Address(updateUserPatientDto.Address+\n":"+updateUserPatientDto.PostalCode))
                end

                Service  -> UserRepository : UpdateAsync(user)

                activate UserRepository

                    UserRepository --> Service : user

                deactivate UserRepository

                Service -> PatientRepository : UpdateAsync(patient)

                activate PatientRepository

                    PatientRepository -->  Service : patient
                
                deactivate PatientRepository

                Note  right of Service: Update user in the auth0 api \nand send email by auth0 for verification

                Service -> UserDto : create(user.Username,user.Email,user.Role)

                activate UserDto

                    UserDto --> Service : userDto

                deactivate UserDto

                Service --> Controller : userDto
            end
            end

        deactivate Service

        PatientActor <-- Controller : 200 OK

    deactivate Controller

deactivate PatientActor


@enduml